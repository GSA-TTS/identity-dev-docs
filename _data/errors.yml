oidc:
  auth:
    - title: Bad client_id
      id: bad-client-id
      accordion-id: bad_client_id
      content: |
        ##### Why it's happening
        The issuer (also known as the client id) provided does not match a service provider registered in the IdP.
        ##### What to do:
        - Ensure the authentication request has a `client_id` value
        - Ensure that the `client_id` sent in the authentication request matches the one registered in your application on the [Partner Dashboard](https://dashboard.int.identitysandbox.gov/){:target="_blank"}.
        - Ensure that the application configuration's `active` value is set to `true`.
    - title: Missing a valid IAL level
      id: oidc-missing-ial
      accordion-id: oidc_missing_ial
      content: |
        ##### Why it's happening
        No IAL Service Levels are present in the `acr_values` parameter of the authentication request.
        ##### What to do:
        Check the `acr_values` parameter in your authentication request and ensure that you are passing either:
        - `http://idmanagement.gov/ns/assurance/ial/1` for Authentication Only applications, OR;
        - `http://idmanagement.gov/ns/assurance/ial/2` for Identity-Verification Permitted applications.
        Learn more about IAL Service Level values here: [https://developers.login.gov/oidc/authorization/#service_level](/oidc/authorization/#service_level){:target="_blank"}
    - title: The acr_values are not authorized
      id: oidc-missing-acr-values
      accordion-id: missing_acr
      content: |
        ##### Why it's happening
        Your authentication request specified an Identity Verification (IdV) level of service, but your application is registered as "Authentication Only."
        ##### What to do:
        If your application is Authentication Only, check the value of your `acr_values` parameter and ensure that it does **not** include `http://idmanagement.gov/ns/assurance/ial/2`.
        If you believe your application **SHOULD** be set to Identity Verification Permitted, please:
        - Reach out to your account manager to make sure your application is authorized for IdV. If it isn't, they can work with you to determine the right service level for your application.
        - If your application **is** authorized for IdV, go to the dashboard and update the Level of Service value to "Identity Verification Permitted."
        - If this is a production instance, submit a [Zendesk request](https://zendesk.login.gov){:target="_blank"} to deploy that change to production.
    - title: No acceptable acr_values found
      id: oidc-no-acr-values
      accordion-id: no_acr
      content: |
        ##### Why it's happening
        No AAL levels are present in the acr_values parameter of the authentication request.
        ##### What to do:
        - Check the `acr_values` parameter in your authentication request.
        - Ensure that you are passing in the appropriate IAL Service Level value as well as any Authentication Assurance (AAL) values you might want for your application.
        More information about the `acr_values` parameter can be found here: [https://developers.login.gov/oidc/authorization/#acr_values](/oidc/authorization/#acr_values){:target="_blank"}
    - title: No valid scope values found
      id: oidc-no-scope
      accordion-id: no_scope
      content: |
        ##### Why it's happening
        No valid attributes were passed in the `scope` parameter of the authentication request.
        ##### What to do:
        - Check the `scope` parameter in your authentication request.
        - Ensure you are passing in `openid` as well as at least one other attribute.
        More information about the different types of attributes can be found here: [https://developers.login.gov/attributes/](/attributes/){:target="_blank"}
    - title: No valid prompt values found
      id: oidc-no-prompt
      accordion-id: no_prompt
      content: |
        ##### Why it's happening
        No valid attribute was passed in the `prompt` parameter of the authentication request.
        ##### What to do:
        - Check the `prompt` parameter in your authentication request.
        - Ensure you are passing `select_account` as the value.
        More information about the `prompt` request parameter can be found here: [https://developers.login.gov/oidc/authorization/#prompt](/oidc/authorization/#prompt){:target="_blank"}
    - title: redirect_uri is invalid
      id: oidc-invalid-redirect
      accordion-id: invalid_redirect
      content: |
        ##### Why it's happening
        You have registered a redirect URI that cannot be parsed.
        ##### What to do:
        - Check your application's configuration on the [Partner Dashboard](https://dashboard.int.identitysandbox.gov/){:target="_blank"}.
        - Ensure that all registered redirect_uris are propertly formatted and use `https` protocol.
    - title: redirect_uri does not match registered redirect_uri
      id: oidc-redirect-match
      accordion-id: redirect_not_match
      content: |
        ##### Why it's happening
        You have not registered the redirect_uri that you sent in your authentication request.
        ##### What to do:
        - Check your application's configuration on the [Partner Dashboard](https://dashboard.int.identitysandbox.gov/){:target="_blank"} and the `redirect_uri` passed through your authentication request.
        - Ensure the `redirect_uri` that you are sending as part of your authentication request is registered. You must register every redirect uri that your application redirects through.
    - title: Unauthorized scope
      id: oidc-unauthotized-scope
      accordion-id: oidc_unauth_scope
      content: |
        ##### Why it's happening
        You have requested attributes that your Service Level does not allow.
        ##### What to do:
        - Check the `scope` parameter in your authentication request.
        - If your application is an *Authentication Only* application, ensure you are only passing in IAL1 attributes.
        More information about the different types of attributes can be found here: [https://developers.login.gov/attributes/](/attributes/){:target="_blank"}
  logout:
    - title: client_id was not recognized
      id: client-id-not-recognized
      accordion-id: client_id_not
      content: |
        ##### Why it's happening
        The issuer (also known as the client id) provided does not match a service provider registered in the IdP.
        ##### What to do:
        - Ensure the logout request has a `client_id` value.
        - Ensure that the `client_id` sent in the logout request matches the one registered in your application on the [Partner Dashboard](https://dashboard.int.identitysandbox.gov/){:target="_blank"}.
        - Ensure that the application configuration's `active` value is set to `true`.
    - title: client_id is missing
      id: client-id-missing
      accordion-id: client_id_missing
      content: |
        ##### Why it's happening
        The issuer (also known as the client id) was not found.
        ##### What to do:
        - Ensure the logout request has a `client_id` value.
    - title: This application is misconfigured and should not be sending id_token_hint. Please send client_id instead.
      id: id-token-hint
      accordion-id: id_token_hint
      content: |
        ##### Why it's happening
        We are no longer supporting the id_token_hint attribute as a method of logging out.
        ##### What to do:
        - Update your logout request to utilize the client_id attribute.
        More information about the logout request parameters can be found here: [https://developers.login.gov/oidc/logout/#logout-request](/oidc/logout/#logout-request){:target="_blank"}.
  token:
    - title: Code is expired
      id: token-expired
      accordion-id: token_expired
      content: |
        ##### Why it's happening
        In the authentication response, a `code` value is returned that is then used in the `token` endpoint request. The code must be used within 15 minutes after it is generated. This error may mean that the user paused for too long during the authentication attempt.
        ##### What to do:
        - Try another authentication attempt without pausing.
    - title: Invalid audience claim
      id: invalid-aud-claim
      accordion-id: invalid_aud_claim
      content: |
        ##### Why it's happening
        The `aud` value in the `client_assertion` JWT is not correct.
        ##### What to do:
        - Check the `aud` key in the `client_assertion` JWT that is being sent in your `token` request.
        Integration environment value: `https://idp.int.identitysandbox.gov/api/openid_connect/token`
        Production environment value: `https://secure.login.gov/api/openid_connect/token`

        More information about the client assertion values can be found here: [https://developers.login.gov/oidc/token/#client_assertion](/oidc/token/#client_assertion){:target="_blank"}.
    - title: Client must authenticate via PKCE or private_key_jwt, missing either code_challenge or client_assertion
      id: pkce-or-private-key
      accordion-id: pkce_or_private_key
      content: |
        ##### Why it's happening
        OpenID Connect authentications must use either a PKCE or a private_key_jwt authentication menthod. Both methods require specific values to be sent in `token` endpoint request.
        ##### What to do:
        If your integration is PKCE:
        - Ensure you are sending the `code_verifier` attribute as part of your token request. The value of this attribute is the original value of the `code_challenge` parameter sent in your original authentication request.

        If your integration is private_key_jwt:
        - Ensure you are sending `client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer` as part of your token request.

        More information about token request values can be found here: [https://developers.login.gov/oidc/token/#request-parameters](/oidc/token/#request-parameters){:target="_blank"}.
    - title: Code is invalid because doesn’t match any user. Please see our documentation at [https://developers.login.gov/oidc/#token](/oidc/#token)
      id: invalid-code
      accordion-id: invalid_code
      content: |
        ##### Why it's happening
        The `code` value being passed in the token request does not match any users. This typically happens when the code value is being reused in multiple token requests, or because the `code` value is not being passed in the token request.
        ##### What to do:
        - Ensure you are passing a `code` parameter in your token request.
        - Ensure there is no possibility of the `code` value in the token request being sent multiple times.

        Reasons can include:
        - Browser is forcing an unexpected refresh
        - User refreshes browser
    - title: code_verifier did not match code_challenge
      id: invalid-code-verifier
      accordion-id: invalid_code_verifier
      content: |
        ##### Why it's happening
        If you are using the PKCE protocol, the `code_verifier` value being passed in the **token** request does not match the decoded `code_challenge` value passed in the **authentication** request.
        ##### What to do:
        - Ensure that the `code_challenge` parameter is a URL-safe Base64 encoding of the SHA256 digest of the `code_verifier` parameter.
    - title: iat must be an integer or floating point Unix timestamp representing a time in the past
      id: invalid-iat
      accordion-id: invalid_iat
      content: |
        ##### Why it's happening
        The [`iat`](/oidc/token/#iat-number) value in the `client_assertion` JWT is the time at which the JWT was issued. It takes the format of an integer timestamp representing the number of seconds since the Unix Epoch. This error means that it is:
        - Not an integer or floating point Unix timestamp, OR
        - It is not an integer/timestamp that is in the past.

        ##### What to do:
        - Ensure your application is correctly generating the `iat` value in the `client_assertion` JWT.
        - If you are correctly creating the value, your server may be experiencing server time drift. Time drift can happen slowly over time. You may need to update or reset your server's clock. We recommend syncing your system with a timeserver like [https://time.gov/](https://time.gov/){:target="_blank" .usa-link--external}.
    - title: Could not validate assertion against any registered public keys
      id: invalid-token-signature
      accordion-id: invalid_token_signature
      content: |
        ##### Why it's happening
        There is no registered certificate that matches the signature of the `client_assertion` JWT that is being passed as part of the token. request.
        ##### What to do:
        - Ensure that the public certificate that matches the private key used to sign the JWT is registered in your application's configuration in the [Partner Dashboard](https://dashboard.int.identitysandbox.gov/){:target="_blank"}.
  userinfo:
    - title: Malformed Authorization header
      id: malformed-auth-header
      accordion-id: malformed_auth_header
      content: |
        ##### Why it's happening
        The `userinfo` endpoint requires an Authorization Header that includes a Bearer token. The Bearer token value is the `access_token` value from the `token` endpoint response.
        ##### What to do:
        - Ensure you are sending an [Authorization header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization){:target="_blank" .usa-link--external} in your request to the `userinfo` endpoint.
        - Ensure the value of the header is `Bearer` followed by the [`access_token`](/oidc/token/#access_token-string){:target="_blank"} that was returned by the `token` endpoint.
    - title: No Authorization header provided
      id: no-auth-header
      accordion-id: no_auth_header
      content: |
        ##### Why it's happening
        The `userinfo` endpoint requires an Authorization Header.
        ##### What to do:
        - Ensure you are sending an [Authorization header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization){:target="_blank" .usa-link--external} in your request to the `userinfo` endpoint.
        - Ensure the value of the header is `Bearer` followed by the [`access_token`](/oidc/token/#access_token-string){:target="_blank"} that was returned by the `token` endpoint.
    - title: Could not find authorization for the contents of the provided access_token or it may have expired
      id: auth-header-contents-not-found
      accordion-id: auth_header_contents_not_found
      content: |
        ##### Why it's happening
        The Bearer token value that is being passed as part of the userinfo endpoint request does not match a live user session. The value may be wrong, or there may have been a long pause during the authentication attempt.
        ##### What to do:
        - Ensure the Authorization header value is `Bearer` followed by the [`access_token`](/oidc/token/#access_token-string){:target="_blank" .usa-link--external} that was returned by the `token` endpoint.
         - Try another authentication attempt without pausing.
